.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MK-SLAVE-RESTART 1p"
.TH MK-SLAVE-RESTART 1p "2008-08-12" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
mk\-slave\-restart \- Watch and restart MySQL replication after errors.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& mk\-slave\-restart \-\-verbose
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
mk-slave-restart watches one or more MySQL replication slaves and tries to skip
statements that cause errors.  It polls slaves intelligently with an
exponentially varying sleep time.  You can specify errors to skip and run the
slaves until a certain binlog position.
.PP
Note: it has come to my attention that Yahoo! had or has an internal tool
called fix_repl, described to me by a past Yahoo! employee and mentioned in
the first edition of High Performance MySQL.  Apparently this tool does the
same thing.  Make no mistake, though: this is not a way to \*(L"fix replication.\*(R"
In fact I would not even encourage its use on a regular basis; I use it only
when I have an error I know I just need to skip past.
.PP
Indiscriminate use of this tool can easily screw up a server you might have
had a chance to truly fix.  You have been warned.
.SH "DOWNLOADING"
.IX Header "DOWNLOADING"
You can download Maatkit from Google Code at
<http://code.google.com/p/maatkit/>, or you can get any of the tools
easily with a command like the following:
.PP
.Vb 3
\&   wget http://www.maatkit.org/get/toolname
\&   or
\&   wget http://www.maatkit.org/trunk/toolname
.Ve
.PP
Where \f(CW\*(C`toolname\*(C'\fR can be replaced with the name (or fragment of a name) of any
of the Maatkit tools.  Once downloaded, they're ready to run; no installation is
needed.  The first \s-1URL\s0 gets the latest released version of the tool, and the
second gets the latest trunk code from Subversion.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-\-always" 4
.IX Item "--always"
Always (re)start the slave processes, even when there is no error.  With this
option enabled, \f(CW\*(C`mk\-slave\-restart\*(C'\fR will not let you stop the slave if you want
to!
.IP "\-\-askpass" 4
.IX Item "--askpass"
Prompt for a password when connecting to MySQL.
.IP "\-\-daemonize" 4
.IX Item "--daemonize"
Fork to the background and detach from the shell.  This probably doesn't work
on Microsoft Windows.
.IP "\-\-charset" 4
.IX Item "--charset"
Enables character set settings in Perl and MySQL.  If the value is \f(CW\*(C`utf8\*(C'\fR, sets
Perl's binmode on \s-1STDOUT\s0 to utf8, passes the \f(CW\*(C`mysql_enable_utf8\*(C'\fR option to
DBD::mysql, and runs \f(CW\*(C`SET NAMES UTF8\*(C'\fR after connecting to MySQL.  Any other
value sets binmode on \s-1STDOUT\s0 without the utf8 layer, and runs \f(CW\*(C`SET NAMES\*(C'\fR after
connecting to MySQL.
.IP "\-\-database" 4
.IX Item "--database"
Database to use.
.IP "\-\-defaults\-file" 4
.IX Item "--defaults-file"
Only read default options from the given file.
.IP "\-\-error\-numbers" 4
.IX Item "--error-numbers"
Makes mk-slave-restart only try to restart if the error number is in this
comma-separated list of errors.  If it sees an error not in the list, it will
exit.
.Sp
The error number is in the \f(CW\*(C`last_errno\*(C'\fR column of \f(CW\*(C`SHOW SLAVE STATUS\*(C'\fR.
.IP "\-\-error\-text" 4
.IX Item "--error-text"
A Perl regular expression against which the error text, if any, is matched.  If
the error text exists and matches, mk-slave-restart will try to restart the
slave.  If it exists but doesn't match, mk-slave-restart will exit.
.Sp
The error text is in the \f(CW\*(C`last_error\*(C'\fR column of \f(CW\*(C`SHOW SLAVE STATUS\*(C'\fR.
.IP "\-\-error\-length" 4
.IX Item "--error-length"
When \*(L"\-\-verbose\*(R" is set high enough to print the error, this option will
truncate the error text to the specified length.  This can be useful to prevent
wrapping on the terminal.
.IP "\-\-help" 4
.IX Item "--help"
Show a brief help message and exit.
.IP "\-\-host" 4
.IX Item "--host"
Connect to host.
.IP "\-\-maxsleep" 4
.IX Item "--maxsleep"
The maximum time mk-slave-restart will sleep before polling the slave again.
See \*(L"\s-1SLEEP\s0\*(R".
.IP "\-\-minsleep" 4
.IX Item "--minsleep"
The minimum time mk-slave-restart will sleep before polling the slave again.
See \*(L"\s-1SLEEP\s0\*(R".
.IP "\-\-monitor" 4
.IX Item "--monitor"
Whether to monitor the slave.  The default is true, but unless you specify it
explicitly, \*(L"\-\-stop\*(R" will disable it by default.
.IP "\-\-password" 4
.IX Item "--password"
Password to use when connecting.
.IP "\-\-port" 4
.IX Item "--port"
Port number to use for connection.
.IP "\-\-quiet" 4
.IX Item "--quiet"
Disables \*(L"\-\-verbose\*(R".
.IP "\-\-recurse" 4
.IX Item "--recurse"
This option specifies that instead of just watching the server specified on
the command\-line, \f(CW\*(C`mk\-slave\-restart\*(C'\fR should try to find its slaves and watch
them too, up to the specified depth.  The default depth of 0 means \*(L"just watch
the slave specified.\*(R"
.Sp
This works if you have configured your slaves to show up in \f(CW\*(C`SHOW SLAVE HOSTS\*(C'\fR.
The minimal configuration for this is the \f(CW\*(C`report_host\*(C'\fR parameter, but there
are other \*(L"report\*(R" parameters as well for the port, username, and password.
.Sp
If \f(CW\*(C`SHOW SLAVE HOSTS\*(C'\fR doesn't return anything, \f(CW\*(C`mk\-slave\-restart\*(C'\fR examines
\&\f(CW\*(C`SHOW PROCESSLIST\*(C'\fR and tries to determine which connections are from
slaves, then connect to them.  This is less likely to work than \f(CW\*(C`SHOW SLAVE
HOSTS\*(C'\fR, but it works sometimes when that doesn't.
.Sp
Recursion works by finding all slaves when the program starts, then watching
them.  If there is more than one slave, \f(CW\*(C`mk\-slave\-restart\*(C'\fR uses \f(CW\*(C`fork()\*(C'\fR to
monitor them.
.IP "\-\-sentinel" 4
.IX Item "--sentinel"
The presence of the file specified by \*(L"\-\-sentinel\*(R" will cause
\&\f(CW\*(C`mk\-slave\-restart\*(C'\fR to stop and exit.  The default is
\&\f(CW\*(C`/tmp/mk\-slave\-restart\-sentinel\*(C'\fR.
.IP "\-\-setvars" 4
.IX Item "--setvars"
Specify any variables you want to be set immediately after connecting to MySQL.
These will be included in a \f(CW\*(C`SET\*(C'\fR command.
.IP "\-\-skipcount" 4
.IX Item "--skipcount"
The number of statements to skip when restarting the slave.
.IP "\-\-sleep" 4
.IX Item "--sleep"
The initial sleep time between checking the slave.  See \*(L"\s-1SLEEP\s0\*(R".
.IP "\-\-socket" 4
.IX Item "--socket"
Socket file to use for connection.
.IP "\-\-stop" 4
.IX Item "--stop"
Causes \f(CW\*(C`mk\-slave\-restart\*(C'\fR to create the sentinel file specified by
\&\*(L"\-\-sentinel\*(R".  This should have the effect of stopping all running
instances which are watching the same sentinel file.  If \*(L"\-\-monitor\*(R" isn't
specified, \f(CW\*(C`mk\-slave\-restart\*(C'\fR will exit after creating the file.  If it is
specified, \f(CW\*(C`mk\-slave\-restart\*(C'\fR will wait the interval given by
\&\*(L"\-\-maxsleep\*(R", then remove the file and continue working.
.Sp
You might find this handy to stop cron jobs gracefully if necessary, or to
replace one running instance with another.  For example, if you want to stop
and restart \f(CW\*(C`mk\-slave\-restart\*(C'\fR every hour (just to make sure that it is
restarted every hour, in case of a server crash or some other problem), you
could use a \f(CW\*(C`crontab\*(C'\fR line like this:
.Sp
.Vb 1
\& 0 * * * * mk\-slave\-restart \-\-monitor \-\-stop \-\-sentinel /tmp/mk\-slave\-restartup
.Ve
.Sp
The non-default \*(L"\-\-sentinel\*(R" will make sure the hourly \f(CW\*(C`cron\*(C'\fR job stops
only instances previously started with the same options (that is, from the
same \f(CW\*(C`cron\*(C'\fR job).
.Sp
See also \*(L"\-\-sentinel\*(R".
.IP "\-\-time" 4
.IX Item "--time"
Causes \f(CW\*(C`mk\-slave\-restart\*(C'\fR to stop after the specified time has elapsed.
.IP "\-\-untilmaster" 4
.IX Item "--untilmaster"
Start the slave, and retry if it fails, until it reaches the given replication
coordinates.  The coordinates are the logfile and position on the master, given
by relay_master_log_file, exec_master_log_pos.  The argument must be in the
format \*(L"file,pos\*(R".  Separate the filename and position with a single comma and
no space.
.Sp
This will also cause an \s-1UNTIL\s0 clause to be given to \s-1START\s0 \s-1SLAVE\s0.
.Sp
After reaching this point, the slave should be stopped and mk-slave-restart
will exit.
.IP "\-\-untilrelay" 4
.IX Item "--untilrelay"
Like \*(L"\-\-untilmaster\*(R", but in the slave's relay logs instead.  The coordinates
are given by relay_log_file, relay_log_pos.
.IP "\-\-user" 4
.IX Item "--user"
User for login if not current user.
.IP "\-\-verbose" 4
.IX Item "--verbose"
Verbosity; specify multiple times for more verbosity.  Verbosity 1 outputs
connection information, a timestamp, relay_log_file, relay_log_pos, and
last_errno.  Verbosity 2 adds last_error.  See also \*(L"\-\-error\-length\*(R".
Verbosity 3 prints the current sleep time each time mk-slave-restart sleeps.
.IP "\-\-version" 4
.IX Item "--version"
Output version information and exit.
.SH "SYSTEM REQUIREMENTS"
.IX Header "SYSTEM REQUIREMENTS"
You need Perl, \s-1DBI\s0, DBD::mysql, and some core packages that ought to be
installed in any reasonably new version of Perl.
.SH "OUTPUT"
.IX Header "OUTPUT"
If you specify \-\-verbose, mk-slave-restart prints a line every time it sees
the slave has an error.  See \*(L"\-\-verbose\*(R" for details.
.SH "SLEEP"
.IX Header "SLEEP"
mk-slave-restart sleeps intelligently between polling the slave.  The current
sleep time varies.
.IP "\(bu" 4
The initial sleep time is given by \*(L"\-\-sleep\*(R".
.IP "\(bu" 4
If it checks and finds an error, it halves the previous sleep time.
.IP "\(bu" 4
If it finds no error, it doubles the previous sleep time.
.IP "\(bu" 4
The sleep time is bounded below by \*(L"\-\-minsleep\*(R" and above by \*(L"\-\-maxsleep\*(R".
.IP "\(bu" 4
Immediately after finding an error, mk-slave-restart assumes another error is
very likely to happen next, so it sleeps the current sleep time or the initial
sleep time, whichever is less.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
Successful exit status is 0.  Any other value represents the exit status of
the Perl process itself, or of the last forked process that exited if there
were multiple servers to monitor.
.SH "COMPATIBILITY"
.IX Header "COMPATIBILITY"
mk-slave-restart should work on many versions of MySQL.  Lettercase of many
output columns from \s-1SHOW\s0 \s-1SLAVE\s0 \s-1STATUS\s0 has changed over time, so it treats them
all as lowercase.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
The environment variable \f(CW\*(C`MKDEBUG\*(C'\fR enables verbose debugging output in all of
the Maatkit tools:
.PP
.Vb 1
\&   MKDEBUG=1 mk\-....
.Ve
.PP
When \*(L"\-\-daemonize\*(R" is given and this variable is set, output is directed to a
debug file in \f(CW\*(C`/tmp\*(C'\fR.
.SH "BUGS"
.IX Header "BUGS"
Please use Google Code Issues and Groups to report bugs or request support:
<http://code.google.com/p/maatkit/>.
.PP
Please include the complete command-line used to reproduce the problem you are
seeing, the version of all MySQL servers involved, the complete output of the
tool when run with \*(L"\-\-version\*(R", and if possible, debugging output produced by
running with the \f(CW\*(C`MKDEBUG=1\*(C'\fR environment variable.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
See also mk-table-checksum, mk-table-sync, mk-slave-delay.
.SH "COPYRIGHT, LICENSE AND WARRANTY"
.IX Header "COPYRIGHT, LICENSE AND WARRANTY"
This program is copyright (c) 2007 Baron Schwartz.  Feedback and improvements
are welcome.
.PP
\&\s-1THIS\s0 \s-1PROGRAM\s0 \s-1IS\s0 \s-1PROVIDED\s0 \*(L"\s-1AS\s0 \s-1IS\s0\*(R" \s-1AND\s0 \s-1WITHOUT\s0 \s-1ANY\s0 \s-1EXPRESS\s0 \s-1OR\s0 \s-1IMPLIED\s0
\&\s-1WARRANTIES\s0, \s-1INCLUDING\s0, \s-1WITHOUT\s0 \s-1LIMITATION\s0, \s-1THE\s0 \s-1IMPLIED\s0 \s-1WARRANTIES\s0 \s-1OF\s0
\&\s-1MERCHANTIBILITY\s0 \s-1AND\s0 \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License as published by the Free Software
Foundation, version 2; \s-1OR\s0 the Perl Artistic License.  On \s-1UNIX\s0 and similar
systems, you can issue `man perlgpl' or `man perlartistic' to read these
licenses.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, \s-1MA\s0  02111\-1307  \s-1USA\s0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Baron Schwartz
.SH "VERSION"
.IX Header "VERSION"
This manual page documents Ver 1.0.8 Distrib 2152 \f(CW$Revision:\fR 2144 $.
