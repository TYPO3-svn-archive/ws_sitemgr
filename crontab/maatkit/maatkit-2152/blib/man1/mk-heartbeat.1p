.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MK-HEARTBEAT 1p"
.TH MK-HEARTBEAT 1p "2008-08-12" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
mk\-heartbeat \- Monitor MySQL replication delay.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\& mk\-heartbeat \-D test \-\-update \-h master\-server
\& mk\-heartbeat \-D test \-\-monitor \-h slave\-server
\& mk\-heartbeat \-D test \-\-monitor \-h slave\-server \-\-dbidriver Pg
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
mk-heartbeat is a two-part MySQL and PostgreSQL replication delay monitoring
system that doesn't require the slave to be working (in other words, it doesn't
rely on \f(CW\*(C`SHOW SLAVE STATUS\*(C'\fR on MySQL).  The first part updates a timestamp
every second on the master.  You must create a table on the master as follows:
.PP
.Vb 5
\& CREATE TABLE heartbeat (
\&   id int NOT NULL PRIMARY KEY,
\&   ts datetime NOT NULL
\& );
\& INSERT INTO heartbeat(id) VALUES(1);
.Ve
.PP
The \f(CW\*(C`MEMORY\*(C'\fR storage engine is suggested, but not required of course, for
MySQL.
.PP
Now you connect mk-heartbeat to the master and run it in \*(L"\-\-update\*(R" mode
to generate the heartbeat.  This completes the first part.
.PP
The second part is to monitor the slave's delay with \*(L"\-\-monitor\*(R" or
\&\*(L"\-\-check\*(R".  This works even on daisy-chained slaves to any depth.
.PP
mk-heartbeat has a one-second resolution.  It depends on the clocks on the
master and slave servers being closely synchronized via \s-1NTP\s0.  \*(L"\-\-update\*(R"
checks happen on the edge of the second, and \*(L"\-\-monitor\*(R" checks happen
halfway between seconds.  As long as the servers' clocks aren't skewed much
and the replication events are propagating in less than half a second,
mk-heartbeat will report zero seconds of delay.
.PP
mk-heartbeat will try to reconnect if the connection has an error, but will
not retry if it can't get a connection when it first starts.
.PP
The \*(L"\-\-dbidriver\*(R" option lets you use mk-heartbeat to monitor PostgreSQL
as well.  It is reported to work well with Slony\-1 replication.
.SH "DOWNLOADING"
.IX Header "DOWNLOADING"
You can download Maatkit from Google Code at
<http://code.google.com/p/maatkit/>, or you can get any of the tools
easily with a command like the following:
.PP
.Vb 3
\&   wget http://www.maatkit.org/get/toolname
\&   or
\&   wget http://www.maatkit.org/trunk/toolname
.Ve
.PP
Where \f(CW\*(C`toolname\*(C'\fR can be replaced with the name (or fragment of a name) of any
of the Maatkit tools.  Once downloaded, they're ready to run; no installation is
needed.  The first \s-1URL\s0 gets the latest released version of the tool, and the
second gets the latest trunk code from Subversion.
.SH "OPTIONS"
.IX Header "OPTIONS"
Specify at least one of \-\-stop, \-\-update, \-\-monitor, or \-\-check.
.PP
\&\-\-update, \-\-monitor, and \-\-check are mutually exclusive.
.PP
\&\-\-daemonize and \-\-check are mutually exclusive.
.IP "\-\-askpass" 4
.IX Item "--askpass"
Prompt for a password when connecting to MySQL.
.IP "\-\-charset" 4
.IX Item "--charset"
short form: \-A; type: string
.Sp
Default character set.
.Sp
Enables character set settings in Perl and MySQL.  If the value is \f(CW\*(C`utf8\*(C'\fR, sets
Perl's binmode on \s-1STDOUT\s0 to utf8, passes the \f(CW\*(C`mysql_enable_utf8\*(C'\fR option to
DBD::mysql, and runs \f(CW\*(C`SET NAMES UTF8\*(C'\fR after connecting to MySQL.  Any other
value sets binmode on \s-1STDOUT\s0 without the utf8 layer, and runs \f(CW\*(C`SET NAMES\*(C'\fR after
connecting to MySQL.
.IP "\-\-check" 4
.IX Item "--check"
Check slave delay once and exit.
.IP "\-\-daemonize" 4
.IX Item "--daemonize"
Fork to the background and detach from the shell.  \s-1POSIX\s0 only.
.IP "\-\-database" 4
.IX Item "--database"
short form: \-D; type: string
.Sp
The database to use for the connection.
.IP "\-\-dbidriver" 4
.IX Item "--dbidriver"
default: mysql; type: string
.Sp
Specify a driver for the connection; \f(CW\*(C`mysql\*(C'\fR and \f(CW\*(C`Pg\*(C'\fR are supported.
.IP "\-\-defaults\-file" 4
.IX Item "--defaults-file"
short form: \-F; type: string
.Sp
Only read mysql options from the given file.  You must give an absolute
pathname.
.IP "\-\-file" 4
.IX Item "--file"
type: string
.Sp
Print latest \-\-monitor output to this file.
.Sp
When \*(L"\-\-monitor\*(R" is given, prints output to the specified file instead of to
\&\s-1STDOUT\s0.  The file is opened, truncated, and closed every interval, so it will
only contain the most recent statistics.  Useful when \*(L"\-\-daemonize\*(R" is given.
.IP "\-\-frames" 4
.IX Item "--frames"
type: string; default: 1m,5m,15m
.Sp
Timeframes for averages.
.Sp
Specifies the timeframes over which to calculate moving averages when
\&\*(L"\-\-monitor\*(R" is given.  Specify as a comma-separated list of numbers with
suffixes.  The suffix can be s for seconds, m for minutes, h for hours, or d for
days.  The size of the largest frame determines the maximum memory usage, as up
to the specified number of per-second samples are kept in memory to calculate
the averages.  You can specify as many timeframes as you like.
.IP "\-\-host" 4
.IX Item "--host"
short form: \-h; type: string
.Sp
Connect to host.
.IP "\-\-interval" 4
.IX Item "--interval"
short form: \-i; type: time; default: 1s
.Sp
Interval between updates and checks.
.Sp
How often to check or update values.  The updates and checks will happen when
the Unix time (seconds since epoch) is an even multiple of this value.  The
suffix is similar to \*(L"\-\-frames\*(R".
.IP "\-\-monitor" 4
.IX Item "--monitor"
Monitor slave delay continuously.
.Sp
Specifies that mk-heartbeat should check the slave's delay every second and
report to \s-1STDOUT\s0 (or if \*(L"\-\-file\*(R" is given, to the file instead).  The output
is the current delay followed by moving averages over the timeframe given in
\&\*(L"\-\-frames\*(R".  For example,
.Sp
.Vb 1
\& 5s [  0.25s,  0.05s,  0.02s ]
.Ve
.IP "\-\-password" 4
.IX Item "--password"
short form: \-p; type: string
.Sp
Password to use when connecting.
.IP "\-\-port" 4
.IX Item "--port"
short form: \-P; type: int
.Sp
Port number to use for connection.
.IP "\-\-quiet" 4
.IX Item "--quiet"
short form: \-q
.Sp
Suppresses normal output.
.IP "\-\-recurse" 4
.IX Item "--recurse"
type: int
.Sp
Check slaves recursively to this depth in \*(L"\-\-check\*(R" mode.
.Sp
Try to discover slave servers recursively, to the specified depth.  After
discovering servers, run the check on each one of them and print the hostname
(if possible), followed by the slave delay.
.Sp
This currently works only with MySQL.  It uses \f(CW\*(C`SHOW PROCESSLIST\*(C'\fR to discover
slaves; if that returns nothing, it falls back to examining the output of \f(CW\*(C`SHOW
SLAVE HOSTS\*(C'\fR to try to find slaves.
.IP "\-\-replace" 4
.IX Item "--replace"
short form: \-r
.Sp
Use \f(CW\*(C`REPLACE\*(C'\fR instead of \f(CW\*(C`UPDATE\*(C'\fR for \-\-update.
.Sp
When running in \*(L"\-\-update\*(R" mode, use \f(CW\*(C`REPLACE\*(C'\fR instead of \f(CW\*(C`UPDATE\*(C'\fR to set
the heartbeat table's timestamp.  The \f(CW\*(C`REPLACE\*(C'\fR statement is a MySQL extension
to \s-1SQL\s0.  This option is useful when you don't know whether the table contains
any rows or not.
.IP "\-\-sentinel" 4
.IX Item "--sentinel"
type: string; default: /tmp/mk\-heartbeat\-sentinel
.Sp
Exit if this file exists.
.IP "\-\-setvars" 4
.IX Item "--setvars"
type: string; default: wait_timeout=10000
.Sp
Set these MySQL variables.
.Sp
Specify any variables you want to be set immediately after connecting to MySQL.
These will be included in a \f(CW\*(C`SET\*(C'\fR command.
.IP "\-\-skew" 4
.IX Item "--skew"
short form: \-k; type: int; default: 500000
.Sp
How long to delay checks, in milliseconds.
.Sp
The default is to delay checks one half second.  Since the update happens as
soon as possible after the beginning of the second on the master, this allows
one half second of replication delay before reporting that the slave lags the
master by one second.  If your clocks are not completely accurate or there is
some other reason you'd like to delay the slave more or less, you can tweak this
value.  Try setting the \f(CW\*(C`MKDEBUG\*(C'\fR environment variable to see the effect this
has.
.IP "\-\-socket" 4
.IX Item "--socket"
short form: \-S; type: string
.Sp
Socket file to use for connection.
.IP "\-\-stop" 4
.IX Item "--stop"
Stop running instances by creating the sentinel file.
.Sp
This should have the effect of stopping all running
instances which are watching the same sentinel file.  If none of
\&\*(L"\-\-update\*(R", \*(L"\-\-monitor\*(R" or \*(L"\-\-check\*(R" is specified, \f(CW\*(C`mk\-heartbeat\*(C'\fR
will exit after creating the file.  If one of these is specified,
\&\f(CW\*(C`mk\-heartbeat\*(C'\fR will wait the interval given by \*(L"\-\-interval\*(R", then remove
the file and continue working.
.Sp
You might find this handy to stop cron jobs gracefully if necessary, or to
replace one running instance with another.  For example, if you want to stop
and restart \f(CW\*(C`mk\-heartbeat\*(C'\fR every hour (just to make sure that it is restarted
every hour, in case of a server crash or some other problem), you could use a
\&\f(CW\*(C`crontab\*(C'\fR line like this:
.Sp
.Vb 1
\& 0 * * * * mk\-heartbeat \-\-update \-D test \-\-stop \-\-sentinel /tmp/mk\-heartbeatup
.Ve
.Sp
The non-default \*(L"\-\-sentinel\*(R" will make sure the hourly \f(CW\*(C`cron\*(C'\fR job stops
only instances previously started with the same options (that is, from the
same \f(CW\*(C`cron\*(C'\fR job).
.Sp
See also \*(L"\-\-sentinel\*(R".
.IP "\-\-table" 4
.IX Item "--table"
short form: \-t; type: string; default: heartbeat
.Sp
The table to use for the heartbeat.
.Sp
Don't specify database.table; use \*(L"\-\-database\*(R" to specify the database.
.IP "\-\-time" 4
.IX Item "--time"
short form: \-m; type: time
.Sp
Time to run before exiting.
.IP "\-\-update" 4
.IX Item "--update"
Update a master's heartbeat.
.IP "\-\-user" 4
.IX Item "--user"
short form: \-u; type: string
.Sp
User for login if not current user.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
The environment variable \f(CW\*(C`MKDEBUG\*(C'\fR enables verbose debugging output in all of the
Maatkit tools:
.PP
.Vb 1
\&   MKDEBUG=1 mk\-....
.Ve
.SH "SYSTEM REQUIREMENTS"
.IX Header "SYSTEM REQUIREMENTS"
You need Perl, \s-1DBI\s0, DBD::mysql, and some core packages that ought to be
installed in any reasonably new version of Perl.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
See also mk-slave-delay and mk-slave-restart.
.SH "BUGS"
.IX Header "BUGS"
Please use Google Code Issues and Groups to report bugs or request support:
<http://code.google.com/p/maatkit/>.
.PP
Please include the complete command-line used to reproduce the problem you are
seeing, the version of all MySQL servers involved, the complete output of the
tool when run with \*(L"\-\-version\*(R", and if possible, debugging output produced by
running with the \f(CW\*(C`MKDEBUG=1\*(C'\fR environment variable.
.SH "COPYRIGHT, LICENSE AND WARRANTY"
.IX Header "COPYRIGHT, LICENSE AND WARRANTY"
This program is copyright (c) 2006 Proven Scaling \s-1LLC\s0 and SixApart Ltd, and
(c) 2007 Baron Schwartz.  Feedback and improvements are welcome.
.PP
\&\s-1THIS\s0 \s-1PROGRAM\s0 \s-1IS\s0 \s-1PROVIDED\s0 \*(L"\s-1AS\s0 \s-1IS\s0\*(R" \s-1AND\s0 \s-1WITHOUT\s0 \s-1ANY\s0 \s-1EXPRESS\s0 \s-1OR\s0 \s-1IMPLIED\s0
\&\s-1WARRANTIES\s0, \s-1INCLUDING\s0, \s-1WITHOUT\s0 \s-1LIMITATION\s0, \s-1THE\s0 \s-1IMPLIED\s0 \s-1WARRANTIES\s0 \s-1OF\s0
\&\s-1MERCHANTIBILITY\s0 \s-1AND\s0 \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License as published by the Free Software
Foundation, version 2; \s-1OR\s0 the Perl Artistic License.  On \s-1UNIX\s0 and similar
systems, you can issue `man perlgpl' or `man perlartistic' to read these
licenses.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, \s-1MA\s0  02111\-1307  \s-1USA\s0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Proven Scaling \s-1LLC\s0, SixApart Ltd, and Baron Schwartz.
.SH "VERSION"
.IX Header "VERSION"
This manual page documents Ver 1.0.10 Distrib 2152 \f(CW$Revision:\fR 2141 $.
