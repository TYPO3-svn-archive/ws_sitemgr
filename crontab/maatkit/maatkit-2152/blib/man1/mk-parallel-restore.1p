.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MK-PARALLEL-RESTORE 1p"
.TH MK-PARALLEL-RESTORE 1p "2008-08-12" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
mk\-parallel\-restore \- Load files into MySQL in parallel.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  mk\-parallel\-restore /path/to/files
\&  mk\-parallel\-restore \-\-tab /path/to/files
.Ve
.PP
Do not rely on mk-parallel-restore for your backups unless you have tested it.
You have been warned.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
mk-parallel-restore is a way to load \s-1SQL\s0 or delimited-file dumps into MySQL
in parallel at high speed.  It is especially designed for restoring files
dumped by mk-parallel-dump.  It automatically
detects whether a file contains \s-1SQL\s0 or delimited data from the filename
extension, and either shells out to \f(CW\*(C`mysql\*(C'\fR or executes \f(CW\*(C`LOAD DATA INFILE\*(C'\fR
with the file.  On UNIX-like systems, it will even make a \s-1FIFO\s0 to decompress
gzipped files for \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.PP
By default it discovers all files in the directory you specify on the command
line.  It uses the file's parent directory as the database name and the file's
name (up to the first dot) as the table name.  It can deal with files named
like the following:
.PP
.Vb 4
\&  dir/tbl.sql
\&  dir/tbl.txt
\&  dir/tbl.csv
\&  dir/tbl.trg
.Ve
.PP
It is also happy with files that look like this, where \f(CW\*(C`EXT\*(C'\fR is one of the
extensions just listed.
.PP
.Vb 2
\&  dir/tbl.EXT.000
\&  dir/tbl.EXT.000.gz
.Ve
.PP
By default, it loads \f(CW\*(C`SQL\*(C'\fR files first, if they exist, then loads \f(CW\*(C`CSV\*(C'\fR or
\&\f(CW\*(C`TXT\*(C'\fR files next, in order of the numbers in the filename extension as just
shown.  This makes it easy for you to reload a table's definition followed by
its data, in case you dumped them into separate files (as happens with
\&\f(CW\*(C`mysqldump\*(C'\fR's \f(CW\*(C`\-\-tab\*(C'\fR option).  It loads \f(CW\*(C`TRG\*(C'\fR files, which create
triggers, last.  Creating the triggers before loading data might keep the data
from being restored correctly.  Files that are named 00_views.sql are loaded
even later, after all the parallel restores are finished; dependencies among
views and tables make them hard to restore one at a time.  See
mk-parallel-dump for details on how data is dumped.
.PP
Exit status is 0 if everything went well, 1 if any files failed, and any
other value indicates an internal error.
.SH "OUTPUT"
.IX Header "OUTPUT"
Output depends on verbosity.  When \*(L"\-\-test\*(R" is given, output includes
commands that would be executed.
.PP
When \*(L"\-\-verbose\*(R" is 0, there is normally no output unless there's an error.
.PP
When \*(L"\-\-verbose\*(R" is 1, there is one line of output for the entire job,
showing how many tables were processed, how many files were loaded with what
status, how much time elapsed, and how much time the parallel load jobs added
up to.  If any files were skipped, the filenames are printed to the output.
.PP
When \*(L"\-\-verbose\*(R" is 2, there's one line of output per table, showing extra
data such as how many threads were running when each table finished loading:
.PP
.Vb 9
\&  DATABASE TABLE            FILES  TIME STATUS THREADS
\&  sakila   language             2  0.07      0       2
\&  sakila   film_actor           2  0.07      0       2
\&  sakila   actor                2  0.06      0       2
\&  sakila   payment              2  0.07      0       2
\&  sakila   transport_backup     2  0.05      0       2
\&  sakila   country              2  0.08      0       2
\&  sakila   film                 2  0.05      0       2
\&  sakila   rental               2  0.07      0       2
.Ve
.SH "SPEED OF PARALLEL LOADING"
.IX Header "SPEED OF PARALLEL LOADING"
User-contributed benchmarks are welcome.  See
<http://www.paragon\-cs.com/wordpress/?p=52> for one user's experiences.
.SH "DOWNLOADING"
.IX Header "DOWNLOADING"
You can download Maatkit from Google Code at
<http://code.google.com/p/maatkit/>, or you can get any of the tools
easily with a command like the following:
.PP
.Vb 3
\&   wget http://www.maatkit.org/get/toolname
\&   or
\&   wget http://www.maatkit.org/trunk/toolname
.Ve
.PP
Where \f(CW\*(C`toolname\*(C'\fR can be replaced with the name (or fragment of a name) of any
of the Maatkit tools.  Once downloaded, they're ready to run; no installation is
needed.  The first \s-1URL\s0 gets the latest released version of the tool, and the
second gets the latest trunk code from Subversion.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-\-askpass" 4
.IX Item "--askpass"
Prompt for a password when connecting to MySQL.
.IP "\-\-basedir" 4
.IX Item "--basedir"
type: string
.Sp
Directory where \s-1FIFO\s0 files will be created.
.IP "\-\-bulkinsbufsize" 4
.IX Item "--bulkinsbufsize"
type: int
.Sp
Set bulk_insert_buffer_size before each \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.Sp
Has no effect without \*(L"\-\-tab\*(R".
.IP "\-\-charset" 4
.IX Item "--charset"
short form: \-A; type: string; default: \s-1BINARY\s0
.Sp
Sets the connection, database, and \f(CW\*(C`LOAD DATA INFILE\*(C'\fR character set.
.Sp
The default is \f(CW\*(C`BINARY\*(C'\fR, which is the safest value to use for \f(CW\*(C`LOAD DATA
INFILE\*(C'\fR.  Has no effect without \*(L"\-\-tab\*(R".
.IP "\-\-commit" 4
.IX Item "--commit"
Commit after each load via \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.IP "\-\-createdb" 4
.IX Item "--createdb"
Create databases if they don't exist.
.IP "\-\-csv" 4
.IX Item "--csv"
Files are in \s-1CSV\s0 format (implies \*(L"\-\-tab\*(R").
.Sp
Changes \*(L"\-\-tab\*(R" options so the following \f(CW\*(C`LOAD DATA INFILE\*(C'\fR statement is used:
.Sp
.Vb 3
\&   LOAD DATA INFILE <filename> INTO TABLE <table>
\&   FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\e"'
\&   LINES TERMINATED BY '\en';
.Ve
.IP "\-\-database" 4
.IX Item "--database"
short form: \-D; type: string
.Sp
Load all files into this database.
.Sp
Overrides the database which is normally specified by the directory in which the
files live.  Does \fInot\fR specify a default database for the connection.
.IP "\-\-databases" 4
.IX Item "--databases"
short form: \-d; type: hash
.Sp
Restore only this comma-separated list of databases.
.IP "\-\-dbregex" 4
.IX Item "--dbregex"
type: string
.Sp
Restore only databases whose names match this regex.
.IP "\-\-defaults\-file" 4
.IX Item "--defaults-file"
short form: \-F; type: string
.Sp
Only read mysql options from the given file.  You must give an absolute
pathname.
.IP "\-\-disablekeys" 4
.IX Item "--disablekeys"
negatable: yes
.Sp
Execute \f(CW\*(C`ALTER TABLE DISABLE KEYS\*(C'\fR before each table.
.IP "\-\-fifo" 4
.IX Item "--fifo"
negatable: yes; default: yes
.Sp
Stream files into a \s-1FIFO\s0 for \-\-tab.
.Sp
Load compressed tab-separated files by piping them into a \s-1FIFO\s0 and using the
\&\s-1FIFO\s0 with \f(CW\*(C`LOAD DATA INFILE\*(C'\fR, instead of by decompressing the files on disk.
Sets \*(L"\-\-umask\*(R" to 0.
.IP "\-\-host" 4
.IX Item "--host"
short form: \-h; type: string
.Sp
Connect to host.
.IP "\-\-ignore" 4
.IX Item "--ignore"
short form: \-i
.Sp
Adds the \f(CW\*(C`IGNORE\*(C'\fR modifier to \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.IP "\-\-ignoredb" 4
.IX Item "--ignoredb"
short form: \-g; type: Hash
.Sp
Ignore this comma-separated list of databases.
.IP "\-\-ignoretbl" 4
.IX Item "--ignoretbl"
short form: \-n; type: Hash
.Sp
Ignore this comma-separated list of table names.
.Sp
Table names may be qualified with the database name.
.IP "\-\-local" 4
.IX Item "--local"
short form: \-L
.Sp
Uses the \f(CW\*(C`LOCAL\*(C'\fR option to \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.Sp
If you enable this option, the files are read locally by the client library, not
by the server.
.IP "\-\-locktables" 4
.IX Item "--locktables"
negatable: yes
.Sp
Lock tables before \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.IP "\-\-noautovalon0" 4
.IX Item "--noautovalon0"
negatable: yes
.Sp
Set \s-1SQL\s0 \f(CW\*(C`NO_AUTO_VALUE_ON_ZERO\*(C'\fR before \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.IP "\-\-nobinlog" 4
.IX Item "--nobinlog"
negatable: yes
.Sp
Set \f(CW\*(C`SQL_LOG_BIN=0\*(C'\fR before \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.Sp
This prevents large loads from being logged to the server's binary log.
.IP "\-\-noforeignkeys" 4
.IX Item "--noforeignkeys"
negatable: yes
.Sp
Set \f(CW\*(C`FOREIGN_KEY_CHECKS=0\*(C'\fR before \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.IP "\-\-nouniquechecks" 4
.IX Item "--nouniquechecks"
negatable: yes
.Sp
Set \f(CW\*(C`UNIQUE_CHECKS=0\*(C'\fR before \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.IP "\-\-numthread" 4
.IX Item "--numthread"
short form: \-m; type: int
.Sp
Specifies the number of parallel processes to run.
.Sp
The default is 2 (this is mk-parallel-restore after all \*(-- 1 is not parallel).
On GNU/Linux machines, the default is the number of times 'processor' appears in
\&\fI/proc/cpuinfo\fR.  On Windows, the default is read from the environment.  In any
case, the default is at least 2, even when there's only a single processor.
.IP "\-\-password" 4
.IX Item "--password"
short form: \-p; type: string
.Sp
Password to use when connecting.
.IP "\-\-port" 4
.IX Item "--port"
short form: \-P; type: int
.Sp
Port number to use for connection.
.IP "\-\-progress" 4
.IX Item "--progress"
Display progress messages.
.Sp
Progress is displayed each time a table finishes loading.  Progress is
calculated by measuring the size of each file to be loaded, and assuming all
bytes are created equal.  The output is the completed and total size, the
percent completed, estimated time remaining, and estimated completion time.
.IP "\-\-quiet" 4
.IX Item "--quiet"
short form: \-q
.Sp
Sets \*(L"\-\-verbose\*(R" to 0.
.IP "\-\-replace" 4
.IX Item "--replace"
short form: \-r
.Sp
Adds the \f(CW\*(C`REPLACE\*(C'\fR modifier to \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.IP "\-\-setvars" 4
.IX Item "--setvars"
type: string; default: wait_timeout=10000
.Sp
Set these MySQL variables.
.Sp
Specify any variables you want to be set immediately after connecting to MySQL.
These will be included in a \f(CW\*(C`SET\*(C'\fR command.
.IP "\-\-socket" 4
.IX Item "--socket"
short form: \-S; type: string
.Sp
Socket file to use for connection.
.IP "\-\-tab" 4
.IX Item "--tab"
short form: \-T
.Sp
Load tab-separated files with \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.Sp
This is similar to what \f(CW\*(C`mysqlimport\*(C'\fR does, but more flexible.
Enables the following options, unless they are specifically disabled:
\&\*(L"\-\-commit\*(R", \*(L"\-\-disablekeys\*(R", \*(L"\-\-noautovalon0\*(R", \*(L"\-\-nobinlog\*(R",
\&\*(L"\-\-nouniquechecks\*(R", \*(L"\-\-noforeignkeys\*(R".
.IP "\-\-tables" 4
.IX Item "--tables"
short form: \-t; type: hash
.Sp
Restore only this comma-separated list of table names.
.Sp
Table names may be qualified with the database name.
.IP "\-\-tblregex" 4
.IX Item "--tblregex"
type: string
.Sp
Restore only tables whose names match this regex.
.IP "\-\-test" 4
.IX Item "--test"
Print commands instead of executing them.
.IP "\-\-truncate" 4
.IX Item "--truncate"
Run \f(CW\*(C`TRUNCATE TABLE\*(C'\fR before \f(CW\*(C`LOAD DATA INFILE\*(C'\fR.
.Sp
This will delete all rows from a table before loading the first tab-delimited
file into it.
.IP "\-\-umask" 4
.IX Item "--umask"
type: string
.Sp
Set the program's \f(CW\*(C`umask\*(C'\fR to this octal value.
.Sp
This is useful when you want created files (such as \s-1FIFO\s0 files) to be readable
or writable by other users (for example, the MySQL server itself).
.IP "\-\-user" 4
.IX Item "--user"
short form: \-u; type: string
.Sp
User for login if not current user.
.IP "\-\-verbose" 4
.IX Item "--verbose"
short form: \-v; cumulative: yes; default: 1
.Sp
Verbosity; can specify multiple times.
.Sp
Repeatedly specifying it increments the verbosity.  Default is 1 if not
specified.  See \*(L"\s-1OUTPUT\s0\*(R".
.IP "\-\-wait" 4
.IX Item "--wait"
short form: \-w; type: time; default: 5m
.Sp
Wait limit when server is down.
.Sp
If the MySQL server crashes during loading, waits until the server comes back
and then continues with the rest of the files.  \f(CW\*(C`mk\-parallel\-restore\*(C'\fR will
check the server every second until this time is exhausted, at which point it
will give up and exit.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
The environment variable \f(CW\*(C`MKDEBUG\*(C'\fR enables verbose debugging output in all of
the Maatkit tools:
.PP
.Vb 1
\&   MKDEBUG=1 mk\-....
.Ve
.SH "SYSTEM REQUIREMENTS"
.IX Header "SYSTEM REQUIREMENTS"
You need Perl, \s-1DBI\s0, DBD::mysql, and some core packages that ought to be
installed in any reasonably new version of Perl.
.SH "BUGS"
.IX Header "BUGS"
Please use Google Code Issues and Groups to report bugs or request support:
<http://code.google.com/p/maatkit/>.
.PP
Please include the complete command-line used to reproduce the problem you are
seeing, the version of all MySQL servers involved, the complete output of the
tool when run with \*(L"\-\-version\*(R", and if possible, debugging output produced by
running with the \f(CW\*(C`MKDEBUG=1\*(C'\fR environment variable.
.SH "COPYRIGHT, LICENSE AND WARRANTY"
.IX Header "COPYRIGHT, LICENSE AND WARRANTY"
This program is copyright (c) 2007 Baron Schwartz.  Feedback and improvements
are welcome.
.PP
\&\s-1THIS\s0 \s-1PROGRAM\s0 \s-1IS\s0 \s-1PROVIDED\s0 \*(L"\s-1AS\s0 \s-1IS\s0\*(R" \s-1AND\s0 \s-1WITHOUT\s0 \s-1ANY\s0 \s-1EXPRESS\s0 \s-1OR\s0 \s-1IMPLIED\s0
\&\s-1WARRANTIES\s0, \s-1INCLUDING\s0, \s-1WITHOUT\s0 \s-1LIMITATION\s0, \s-1THE\s0 \s-1IMPLIED\s0 \s-1WARRANTIES\s0 \s-1OF\s0
\&\s-1MERCHANTIBILITY\s0 \s-1AND\s0 \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License as published by the Free Software
Foundation, version 2; \s-1OR\s0 the Perl Artistic License.  On \s-1UNIX\s0 and similar
systems, you can issue `man perlgpl' or `man perlartistic' to read these
licenses.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, \s-1MA\s0  02111\-1307  \s-1USA\s0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Baron Schwartz.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
See also mk-parallel-dump.
.SH "VERSION"
.IX Header "VERSION"
This manual page documents Ver 1.0.8 Distrib 2152 \f(CW$Revision:\fR 2117 $.
