.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "maatkitdsn 3pm"
.TH maatkitdsn 3pm "2008-08-12" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
maatkitdsn \- Data Source Names for maatkit
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& h=host,u=user,p=password,...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes how to specify a Data Source Name (\s-1DSN\s0) for maatkit.
Maatkit uses DSNs to specify how to create a \s-1DBD\s0 connection to a MySQL server.
The maatkit tools that have command-line arguments such as \-u or \-p use them to
create a \s-1DSN\s0 behind the scenes, then use the \s-1DSN\s0 to connect to MySQL.
.PP
A \s-1DSN\s0 is a string of key=value parts separated by commas.  The possible keys are
shown later in this document.  You can also get a quick synopsis from the \-\-help
output of many of the maatkit tools.
.SH "PARTS"
.IX Header "PARTS"
Many of the tools add more parts to DSNs for special purposes, and sometimes
override parts to make them do something slightly different.  However, all the
tools support at least the following:
.IP "A" 4
.IX Item "A"
Specifies the default character set for the connection.
.Sp
Enables character set settings in Perl and MySQL.  If the value is \f(CW\*(C`utf8\*(C'\fR, sets
Perl's binmode on \s-1STDOUT\s0 to utf8, passes the \f(CW\*(C`mysql_enable_utf8\*(C'\fR option to
DBD::mysql, and runs \f(CW\*(C`SET NAMES UTF8\*(C'\fR after connecting to MySQL.  Any other
value sets binmode on \s-1STDOUT\s0 without the utf8 layer, and runs \f(CW\*(C`SET NAMES\*(C'\fR after
connecting to MySQL.
.Sp
Unfortunately, there is no way from within Perl itself to specify the client
library's character set.  \f(CW\*(C`SET NAMES\*(C'\fR only affects the server; if the client
library's settings don't match, there could be problems.  You can use the
defaults file to specify the client library's character set, however.
.IP "D" 4
.IX Item "D"
Specifies the connection's default database.
.IP "F" 4
.IX Item "F"
Specifies a defaults file the client library should read.  The maatkit tools all
read the [mysql] section within the defaults file.  If you omit this, the
standard defaults files will be read in the usual order.  \*(L"Standard\*(R" varies from
system to system, because the filenames to read are compiled into the client
library.  On Debian systems, for example, it's usually /etc/mysql/my.cnf,
~/.my.cnf, and then /usr/etc/my.cnf.  If you place the following into ~/.my.cnf,
maatkit will Do The Right Thing:
.Sp
.Vb 3
\& [mysql]
\& user=your_user_name
\& pass=secret
.Ve
.Sp
Omitting this part is usually the right thing to do.  As long as you have
configured your ~/.my.cnf correctly, that will result in maatkit connecting
automatically without needing a username or password.
.Sp
You can also specify a default character set in the defaults file.  Unlike the
\&\*(L"A\*(R" part described above, this will actually instruct the client library
(DBD::mysql) to change the character set it uses internally, which cannot be
accomplished any other way as far as I know, except for \f(CW\*(C`utf8\*(C'\fR.
.IP "P" 4
.IX Item "P"
Port number to use for the connection.  Note that the usual special-case
behaviors apply: if you specify \f(CW\*(C`localhost\*(C'\fR as your hostname on Unix systems,
the connection actually uses a socket file, not a \s-1TCP/IP\s0 connection, and thus
ignores the port.
.IP "S" 4
.IX Item "S"
Socket file to use for the connection (on Unix systems).
.IP "h" 4
.IX Item "h"
Hostname or \s-1IP\s0 address for the connection.
.IP "p" 4
.IX Item "p"
Password to use when connecting.
.IP "u" 4
.IX Item "u"
User for login if not current user.
.SH "BAREWORD"
.IX Header "BAREWORD"
Many of the tools will let you specify a \s-1DSN\s0 as a single word, without any
key=value syntax.  This is called a 'bareword'.  How this is handled is
tool\-specific, but it is usually interpreted as the \*(L"h\*(R" part.
.SH "DEFAULT PROPAGATION"
.IX Header "DEFAULT PROPAGATION"
Many tools will let you propagate values from one \s-1DSN\s0 to the next, so you don't
have to specify all the parts for each \s-1DSN\s0.  For example, if you want to specify
a username and password for each \s-1DSN\s0, you can connect to three hosts as follows:
.PP
.Vb 1
\& h=host1,u=fred,p=wilma host2 host3
.Ve
.PP
This is tool\-specific.
